function metaprogramming(; extmod=false)
    macros = [
        "Macros" => [
            "@MIME_str",
            "@NamedTuple",
            "@__DIR__",
            "@__FILE__",
            "@__LINE__",
            "@__MODULE__",
            "@__doc__ˣ",
            "@__dot__",
            "@_inline_metaˣ",
            "@_noinline_metaˣ",
            "@allocated",
            "@allocations",
            "@assert",
            "@assume_effectsˣ",
            "@async",
            "@atomic",
            "@atomicreplace",
            "@atomicswap",
            "@b_str",
            "@big_str",
            "@boundscheck",
            "@ccall",
            "@cfunction",
            "@code_llvm",
            "@code_lowered",
            "@code_native",
            "@code_typed",
            "@code_warntype",
            "@cmd",
            "@coalesce",
            "@constpropˣ",
            "@debug",
            "@deprecate",
            "@doc",
            "@elapsed",
            "@edit",
            "@enum",
            "@eval",
            "@evalpoly",
            "@fastmath",
            "@gensym",
            "@goto",
            "@html_str",
            "@inbounds",
            "@info",
            "@int128_str",
            "@invoke",
            "@invokelatest",
            "@irrationalˣ",
            "@isdefined",
            "@kwdef",
            "@label",
            "@lazy_str",
            "@less",
            "@localsˣ",
            "@lock",
            "@lock_nofailˣ",
            "@macroexpand",
            "@macroexpand1",
            "@noinline",
            "@nospecialize",
            "@polly",
            "@propagate_inboundsˣ",
            "@pureˣ",
            "@r_str",
            "@raw_str",
            "@s_str",
            "@show",
            "@showtime",
            "@simd",
            "@something",
            "@specialize",
            "@static",
            "@sync",
            "@task",
            "@text_str",
            "@time",
            "@timed",
            "@timev",
            "@uint128_str",
            "@v_str",
            "@view",
            "@views",
            "@warn",
            "@which",
        ],
    ]
    methods = [
        "Methods" => [
            "True/False" => [
                "is_exprˣ",
                "isbinaryoperatorˣ",
                "isexprˣ",
                "isidentifierˣ",
                "isoperatorˣ",
                "ispostfixoperatorˣ",
                "isunaryoperatorˣ",
                "print",
                "println",
                "recursive_dotcalls!ˣ",
                "replace_ref_begin_end!ˣ",
                "repr",
                "show",
            ],
            "Others" => ["ccall_macro_parseˣ", "esc", "eval", "gensym", "macroexpand"],
        ],
    ]
    types = ["Types" => ["DataType", "Expr", "QuoteNode", "Symbol"]]
    operators = ["Operators" => [":"]]
    stdlib => ["Stdlib" => ["Printf.@printf", "Printf.@sprintf"]]
    _print_names(macros, methods, types, operators)
    if extmod == true
        _print_names(stdlib)
    end
end
